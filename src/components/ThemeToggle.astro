---
// ThemeToggle.astro
---

<button
  id="theme-toggle"
  class="relative p-2 rounded-lg bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"
  aria-label="Toggle theme"
>
  <svg
    id="sun-icon"
    class="w-5 h-5 text-gray-800 dark:text-gray-200 transition-opacity duration-200"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    ></path>
  </svg>
  <svg
    id="moon-icon"
    class="w-5 h-5 text-gray-800 dark:text-gray-200 transition-opacity duration-200 absolute top-2 left-2 opacity-0 dark:opacity-100"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    ></path>
  </svg>
</button>

<script>
  function initThemeToggle() {
    const themeToggle = document.getElementById('theme-toggle');
    const sunIcon = document.getElementById('sun-icon');
    const moonIcon = document.getElementById('moon-icon');
    
    // Get initial theme from localStorage or default to 'light'
    const currentTheme = localStorage.getItem('theme') || 'light';
    
    // Set initial theme
    if (currentTheme === 'dark') {
      document.documentElement.classList.add('dark');
      updateIcons(true);
    } else {
      document.documentElement.classList.remove('dark');
      updateIcons(false);
    }
    
    // Theme toggle click handler
    themeToggle?.addEventListener('click', () => {
      const isDark = document.documentElement.classList.contains('dark');
      
      if (isDark) {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
        updateIcons(false);
      } else {
        document.documentElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
        updateIcons(true);
      }
    });
    
    function updateIcons(isDark: boolean) {
  if (sunIcon && moonIcon) {
    if (isDark) {
      sunIcon.style.opacity = '0';
      moonIcon.style.opacity = '1';
    } else {
      sunIcon.style.opacity = '1';
      moonIcon.style.opacity = '0';
    }
  }
}
  }
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initThemeToggle);
  
  // Re-initialize on navigation (for Astro's client-side routing)
  document.addEventListener('astro:page-load', initThemeToggle);
</script>

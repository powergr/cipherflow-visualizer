---
import SEO from '../components/SEO.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
  noindex?: boolean;
  socialImage?: string;
  type?: 'website' | 'article';
}

const {
  title = 'Encryptions Algorithms Visualizers',
  description = 'A modern educational blog with interactive content and visualizations.',
  image = '/images/logo.png',
  canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
  noindex = false,
  type = 'website'
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Preload critical fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap" rel="stylesheet" />
    
    <!-- D3.js from CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/7.8.5/d3.min.js" integrity="sha512-M7nHCiNUOwFt6Us3r8alutZLm9qMt4s9951uo8jqO4UwJ1hziseL6O3ndFyigx6+LREfZqnhHxYjKRJ8ZQ69DQ==" crossorigin="anonymous"></script>
    
    <!-- Theme detection script (must be inline to prevent FOUC) -->
    <script is:inline>
      // Theme detection and initialization
      (function() {
        const theme = localStorage.getItem('theme') || 
                     (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
        
        document.documentElement.classList.toggle('dark', theme === 'dark');
        localStorage.setItem('theme', theme);
      })();
    </script>
    
    <!-- SEO Component -->
    <SEO
      title={title}
      description={description}
      image={image}
      canonicalURL={canonicalURL}
      noindex={noindex}
      type={type}
    />
  </head>
  
  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300">
    <!-- Skip to main content for accessibility -->
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary-600 text-white px-4 py-2 rounded-md z-50">
      Skip to main content
    </a>
    
    <!-- Page wrapper -->
    <div class="min-h-screen flex flex-col">
      <!-- Header -->
      <Header />
      
      <!-- Main content -->
      <main id="main-content" class="flex-1">
        <slot />
      </main>
      
      <!-- Footer -->
      <Footer />
    </div>
    
    <!-- Back to top button -->
    <button
      id="back-to-top"
      class="fixed bottom-8 right-8 bg-primary-600 hover:bg-primary-700 text-white p-3 rounded-full shadow-lg transition-all duration-300 opacity-0 invisible z-40"
      aria-label="Back to top"
    >
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
      </svg>
    </button>
    
    <!-- Scripts -->
    <script>
      // Back to top functionality
      const backToTopButton = document.getElementById('back-to-top');
      
      window.addEventListener('scroll', () => {
        if (window.pageYOffset > 300) {
          backToTopButton?.classList.remove('opacity-0', 'invisible');
          backToTopButton?.classList.add('opacity-100', 'visible');
        } else {
          backToTopButton?.classList.add('opacity-0', 'invisible');
          backToTopButton?.classList.remove('opacity-100', 'visible');
        }
      });
      
      backToTopButton?.addEventListener('click', () => {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });
      
      // Enhanced keyboard navigation
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          // Close any open modals or dropdowns
          document.querySelectorAll('[data-closable]').forEach(el => {
            el.classList.add('hidden');
          });
        }
      });
      
      // Smooth scrolling for anchor links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
       anchor.addEventListener('click', function (this: HTMLAnchorElement, e: Event) {
        e.preventDefault();
       const href = this.getAttribute('href');
       if (href) {
          const target = document.querySelector(href);
        if (target) {
            target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
         }
       }
      });
    });
    </script>
  </body>
</html>